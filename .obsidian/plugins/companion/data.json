{
  "provider": "groq",
  "model": "llama-3.3-70b-versatile",
  "enable_by_default": true,
  "keybind": "Tab",
  "delay_ms": 2000,
  "stream": true,
  "accept": {
    "splitter_regex": "\\.",
    "display_splitter_regex": "[.?!:;]",
    "completion_completeness_regex": ".*[^d]$",
    "min_accept_length": 4,
    "min_display_length": 50,
    "retrigger_threshold": 128
  },
  "provider_settings": {
    "groq": {
      "settings": "{\"api_key\":\"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\"}",
      "models": {
        "llama-3.3-70b-versatile": "{\"system_prompt\":\"You are an efficient autocomplete assistant for note-taking, optimized for the Obsidian editor (Markdown format, e.g., # for headings, 'code' for inline code). Your task is to:\\n- Analyze the full context of the note (including any links, text, or data provided) and the last line typed.\\n- Offer concise, actionable completions (e.g., - bullet points, short phrases) to minimize API calls.\\n- Prioritize brevity and relevance over verbosity; avoid over-explaining unless asked.\\n- If links are present, infer their content efficiently without fetching unless critical.\\n- Adapt to the user's style and intent based on the note’s tone and structure.\\n- Do not generate unsolicited content (e.g., images) or stray from the last line’s direction.\\n- If a statement is prepended with a colon (e.g., \\\"Example in C of a stack:\\\"), provide a concise answer.\\n- When writing code:\\n  1. Start on a new line.\\n  2. Add \\\"```\\\" (no whitespace before).\\n  3. Write the code concisely.\\n  4. Add a new line.\\n  5. Add \\\"```\\\" (no whitespace before), followed by a new line.\\n- Naturally extend the document without repeating prior content, as if you wrote it.\\n- Format responses in Obsidian-compatible Markdown for seamless display (e.g., - for bullets, # for headings, 'code' for inline code).\\nCurrent date: March 12, 2025. Use up-to-date knowledge as needed.\",\"user_prompt\":\"# Note Context\\n{{context}}\\n\\n---\\nContinue this paragraph with concise, relevant suggestions in Markdown (e.g., - bullet points or short phrases). Make a new line if necessary:\\n\\n{{last_line}}\",\"temperature\":0.5,\"max_tokens\":100}"
      }
    }
  },
  "presets": [
    {
      "name": "GROK preset",
      "provider": "groq",
      "model": "llama-3.3-70b-versatile",
      "provider_settings": "{\"api_key\":\"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\"}",
      "model_settings": "{\"system_prompt\":\"You are an efficient autocomplete assistant for note-taking, built to provide short, relevant, and context-aware suggestions. Your task is to:\\n- Analyze the full context of the note (including any links, text, or data provided) and the last line typed.\\n- Offer concise, actionable completions (e.g., bullet points, short phrases) to minimize API calls.\\n- Prioritize brevity and relevance over verbosity; avoid over-explaining unless asked.\\n- If links are present, infer their content efficiently without fetching unless critical.\\n- Adapt to the user's style and intent based on the note’s tone and structure.\\n- Do not generate unsolicited content (e.g., images) or stray from the last line’s direction.\\n- If a statement is prepended with a colon, e.g., \\\"Example in C of a stack:\\\", answer the question. Be very concise. \\n- When writing any code, first make a new line,  add \\\"```\\\", make another new line, write the code, and at the end make a new line also with \\\"```\\\", and make a new line again.\",\"user_prompt\":\"{{#context}}Context:\\n\\n{{context}}\\n\\n=================================\\n{{/context}}Do not start with \\\"...\\\". Continue the following paragraph. Give concise, relevant suggestions(e.g, bullet points or short phrases): \\n\\n{{last_line}}\",\"temperature\":0.5,\"max_tokens\":100}",
      "enable_editor_command": false
    }
  ],
  "fallback": null
}